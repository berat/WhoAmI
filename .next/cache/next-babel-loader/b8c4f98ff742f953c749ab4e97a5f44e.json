{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/bozkurt/Desktop/deneme/WhoAmI/components/newsletter.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from 'react';\nexport default function Newsletter(props) {\n  _s();\n\n  var _props$data, _props$data2, _props$data3;\n\n  var inputMail = useRef(null);\n\n  var _useState = useState(''),\n      message = _useState[0],\n      setMessage = _useState[1];\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res, _yield$res$json, error;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return fetch('/api/subscribe', {\n                body: JSON.stringify({\n                  email: inputMail.current.value\n                }),\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                method: 'POST'\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 6;\n              return res.json();\n\n            case 6:\n              _yield$res$json = _context.sent;\n              error = _yield$res$json.error;\n\n              if (!error) {\n                _context.next = 11;\n                break;\n              }\n\n              setMessage(error);\n              return _context.abrupt(\"return\");\n\n            case 11:\n              inputMail.current.value = '';\n              setMessage('Success! ðŸŽ‰ You are now subscribed to the newsletter.');\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"section\", {\n    id: \"Newsletter\",\n    className: \"\".concat(!props.isOpen ? 'closeResMenu' : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: \"/newsletter.svg\",\n    alt: \"sign up to newsletter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, props.data && (props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.title[0].text)), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, props.data && (props === null || props === void 0 ? void 0 : (_props$data2 = props.data) === null || _props$data2 === void 0 ? void 0 : _props$data2.content[0].text)), __jsx(\"form\", {\n    className: \"newsletterForm\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"Your email address...\",\n    required: true,\n    ref: inputMail,\n    pattern: \"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,}$\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, props.data && (props === null || props === void 0 ? void 0 : (_props$data3 = props.data) === null || _props$data3 === void 0 ? void 0 : _props$data3.button_text[0].text), __jsx(\"img\", {\n    src: \"/angleButton.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 59\n    }\n  }))), message ? message : null);\n}\n\n_s(Newsletter, \"o7JchDFvuEB3Jfu8uacb0PNvNEE=\");\n\n_c = Newsletter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Newsletter\");","map":{"version":3,"sources":["/Users/bozkurt/Desktop/deneme/WhoAmI/components/newsletter.js"],"names":["React","useRef","useState","Newsletter","props","inputMail","message","setMessage","onSubmit","e","preventDefault","fetch","body","JSON","stringify","email","current","value","headers","method","res","json","error","isOpen","data","title","text","content","button_text"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\n\n\nexport default function Newsletter(props) {\n  const inputMail = useRef(null)\n  const [message, setMessage] = useState('')\n\n  const onSubmit = async (e) => {\n    e.preventDefault()\n    const res = await fetch('/api/subscribe', {\n      body: JSON.stringify({\n        email: inputMail.current.value\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST'\n    })\n\n    const { error } = await res.json()\n\n    if (error) {\n      setMessage(error)\n\n      return\n    }\n    inputMail.current.value = ''\n    setMessage('Success! ðŸŽ‰ You are now subscribed to the newsletter.')\n  }\n\n\n  return (\n    <section\n      id=\"Newsletter\"\n      className={`${!props.isOpen ? 'closeResMenu' : null}`}\n    >\n      <img src=\"/newsletter.svg\" alt=\"sign up to newsletter\" />\n      <h3>{props.data && props?.data?.title[0].text}</h3>\n      <p>{props.data && props?.data?.content[0].text}</p>\n      <form className=\"newsletterForm\" onSubmit={onSubmit}>\n        <input\n          type=\"email\"\n          placeholder=\"Your email address...\"\n          required\n          ref={inputMail}\n          pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n        />\n\n        <button type=\"submit\">\n          {props.data && props?.data?.button_text[0].text}<img src=\"/angleButton.svg\" />\n        </button>\n      </form>\n      {message\n        ? message\n        : null}\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}