{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Prismic from 'prismic-javascript';\nvar apiEndpoint = 'https://metoinsideweb.cdn.prismic.io/api/v2';\nvar accessToken = process.env.PRISMIC_API_KEY;\nvar Client = Prismic.client(apiEndpoint, {\n  accessToken: accessToken\n});\nexport default function data(props) {\n  _s();\n\n  var _useState = useState(null),\n      doc = _useState[0],\n      setDocData = _useState[1];\n\n  var _useState2 = useState(null),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Client.query(Prismic.Predicates.any('document.type', ['homepage', 'constants', 'contact_me', 'header', 'homepage0', 'my_articles', 'testimonials', 'what_i_did']));\n\n              case 2:\n                response = _context.sent;\n\n                if (response) {\n                  setDocData(response.results);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []); // // useEffect(() => {\n  // //   doc && setValue(extractData(props))\n  // // }, [doc])\n  // const extractData = (props) => doc.filter((item) => item.type == props)\n  // if(props === \"homepage\"){\n  //   return doc && setValue(extractData(props))\n  // }\n  // if(props === \"homepage0\"){\n  //   return doc && setValue(extractData(props))\n  // }\n\n  return doc;\n}\n\n_s(data, \"Xmf65adgd0L2lkbY47m/rrWaYv4=\");","map":{"version":3,"sources":["/Users/bozkurt/Desktop/deneme/WhoAmI/utils/datas.js"],"names":["React","useEffect","useState","Prismic","apiEndpoint","accessToken","process","env","PRISMIC_API_KEY","Client","client","data","props","doc","setDocData","value","setValue","fetchData","query","Predicates","any","response","results"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,IAAMC,WAAW,GAAG,6CAApB;AACA,IAAMC,WAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,eAA/B;AAEA,IAAMC,MAAM,GAAGN,OAAO,CAACO,MAAR,CAAeN,WAAf,EAA4B;AAAEC,EAAAA,WAAW,EAAXA;AAAF,CAA5B,CAAf;AAEA,eAAe,SAASM,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,kBACRV,QAAQ,CAAC,IAAD,CADA;AAAA,MAC3BW,GAD2B;AAAA,MACtBC,UADsB;;AAAA,mBAERZ,QAAQ,CAAC,IAAD,CAFA;AAAA,MAE3Ba,KAF2B;AAAA,MAEpBC,QAFoB;;AAIlCf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,SAAS;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACOR,MAAM,CAACS,KAAP,CACrBf,OAAO,CAACgB,UAAR,CAAmBC,GAAnB,CAAuB,eAAvB,EAAwC,CACtC,UADsC,EAEtC,WAFsC,EAGtC,YAHsC,EAItC,QAJsC,EAKtC,WALsC,EAMtC,aANsC,EAOtC,cAPsC,EAQtC,YARsC,CAAxC,CADqB,CADP;;AAAA;AACVC,gBAAAA,QADU;;AAahB,oBAAIA,QAAJ,EAAc;AAEZP,kBAAAA,UAAU,CAACO,QAAQ,CAACC,OAAV,CAAV;AACD;;AAhBe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATL,SAAS;AAAA;AAAA;AAAA,OAAf;;AAkBAA,IAAAA,SAAS;AACV,GApBQ,EAoBN,EApBM,CAAT,CAJkC,CA0BlC;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SAAOJ,GAAP;AACD;;GAzCuBF,I","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Prismic from 'prismic-javascript'\n\nconst apiEndpoint = 'https://metoinsideweb.cdn.prismic.io/api/v2'\nconst accessToken =process.env.PRISMIC_API_KEY\n\nconst Client = Prismic.client(apiEndpoint, { accessToken })\n\nexport default function data(props) {\n  const [doc, setDocData] = useState(null)\n  const [value, setValue] = useState(null)\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await Client.query(\n        Prismic.Predicates.any('document.type', [\n          'homepage',\n          'constants',\n          'contact_me',\n          'header',\n          'homepage0',\n          'my_articles',\n          'testimonials',\n          'what_i_did'\n        ])\n      )\n      if (response) {\n\n        setDocData(response.results)\n      }\n    }\n    fetchData()\n  }, [])\n\n  // // useEffect(() => {\n  // //   doc && setValue(extractData(props))\n  // // }, [doc])\n\n  // const extractData = (props) => doc.filter((item) => item.type == props)\n\n  // if(props === \"homepage\"){\n  //   return doc && setValue(extractData(props))\n  // }\n\n  // if(props === \"homepage0\"){\n  //   return doc && setValue(extractData(props))\n  // }\n\n  return doc\n}\n"]},"metadata":{},"sourceType":"module"}