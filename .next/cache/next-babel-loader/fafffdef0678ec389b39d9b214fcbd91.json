{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/bozkurt/Desktop/deneme/WhoAmI/components/myArticles.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport useWindowSize from '../utils/hook';\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nexport default function MyArticles(props) {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState({\n    load: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      getData = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var getPost = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, data, dataSon;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@metoinside');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              data = _context.sent;\n              dataSon = data.items.filter(function (item) {\n                return item.categories.length > 0;\n              });\n              setData({\n                load: true,\n                data: dataSon.slice(0, 6),\n                url: data.feed.link\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var changeDateFormat = function changeDateFormat(sendDate) {\n    var pubDate = new Date(sendDate);\n    return \"\".concat(pubDate.getDate(), \" \").concat(months[pubDate.getMonth() + 1], \" \").concat(pubDate.getFullYear());\n  };\n\n  React.useEffect(function () {\n    getPost();\n  }, []);\n  var size = useWindowSize();\n  var mobil = size.width <= 767;\n  return __jsx(\"section\", {\n    id: \"Articles\",\n    className: \"\".concat(!props.isOpen ? 'closeResMenu' : null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"section\", {\n    className: \"articlesIMG\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"\".concat(!mobil ? '/articles.svg' : '/resArticles.svg'),\n    alt: \"Articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })), __jsx(\"section\", {\n    className: \"articlesContent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, props.data.length !== 0 ? props.data[0].data.title[0].text : \"My Articles\"), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, getData.load && getData.data.map(function (item, index) {\n    return __jsx(\"li\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, __jsx(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: item.link,\n      prefetch: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, item.title))), __jsx(\"div\", {\n      className: \"bottom\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, changeDateFormat(item.pubDate)));\n  })), __jsx(\"button\", {\n    onClick: function onClick() {\n      return location.href = props.medium && props.medium;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"See All Articles\")));\n}\n\n_s(MyArticles, \"lbAbBboS6xiOPXwjBZdf720tXnA=\", false, function () {\n  return [useWindowSize];\n});\n\n_c = MyArticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyArticles\");","map":{"version":3,"sources":["/Users/bozkurt/Desktop/deneme/WhoAmI/components/myArticles.js"],"names":["React","Link","useWindowSize","months","MyArticles","props","useState","load","getData","setData","getPost","fetch","response","json","data","dataSon","items","filter","item","categories","length","slice","url","feed","link","changeDateFormat","sendDate","pubDate","Date","getDate","getMonth","getFullYear","useEffect","size","mobil","width","isOpen","title","text","map","index","location","href","medium"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\n\nimport useWindowSize from '../utils/hook'\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec'\n]\n\nexport default function MyArticles(props) {\n  const [getData, setData] = React.useState({ load: false })\n\n  const getPost = async () => {\n    const response = await fetch(\n      'https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@metoinside'\n    )\n    const data = await response.json()\n    const dataSon = data.items.filter(item => item.categories.length > 0)\n    setData({ load: true, data: dataSon.slice(0, 6), url: data.feed.link })\n  }\n\n  const changeDateFormat = (sendDate) => {\n    const pubDate = new Date(sendDate)\n    return `${pubDate.getDate()} ${\n      months[pubDate.getMonth() + 1]\n    } ${pubDate.getFullYear()}`\n  }\n\n  React.useEffect(() => {\n    getPost()\n  }, [])\n\n  const size = useWindowSize()\n  const mobil = size.width <= 767\n\n  return (\n    <section\n      id=\"Articles\"\n      className={`${!props.isOpen ? 'closeResMenu' : null}`}\n    >\n      <section className=\"articlesIMG\">\n        <img\n          src={`${!mobil ? '/articles.svg' : '/resArticles.svg'}`}\n          alt=\"Articles\"\n        />\n      </section>\n      <section className=\"articlesContent\">\n        <h2>{props.data.length !== 0 ? props.data[0].data.title[0].text : \"My Articles\"}</h2>\n        <ul>\n          {getData.load &&\n            getData.data.map((item, index) => (\n              <li key={index}>\n                <h4>\n                  <Link href={item.link} prefetch={false}>\n                    <a>{item.title}</a>\n                  </Link>\n                </h4>\n                <div className=\"bottom\">\n                  {changeDateFormat(item.pubDate)} \n                  {/* <i>.</i> 3 Min Reading */}\n                </div>\n              </li>\n            ))}\n        </ul>\n        <button onClick={() =>\n            (location.href = props.medium && props.medium)\n          }>See All Articles</button>\n      </section>\n    </section>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}